#include <stdio.h>
typedef struct _node{
	int h,w;
}node;
int map[505][505];

node poly[19][4]={
	{{0,0},{1,0},{2,0},{3,0}},
	{{0,0},{0,1},{0,2},{0,3}},
	{{0,0},{1,0},{0,1},{1,1}},
	
	{{0,0},{1,0},{2,0},{2,-1}},
	{{0,0},{1,0},{2,0},{2,1}},
	{{0,0},{0,-1},{1,0},{2,0}},
	{{0,0},{0,1},{1,0},{2,0}},
	{{0,0},{1,0},{0,1},{0,2}},
	{{0,0},{-1,0},{0,1},{0,2}},
	{{0,0},{0,1},{0,2},{1,2}},
	{{0,0},{0,1},{0,2},{-1,2}},
	
	{{0,0},{1,0},{1,1},{2,1}},
	{{0,0},{1,0},{1,-1},{2,-1}},
	{{0,0},{0,1},{1,1},{1,2}},
	{{0,0},{0,1},{-1,1},{-1,2}},
	
	{{0,0},{-1,0},{1,0},{0,-1}},
	{{0,0},{-1,0},{1,0},{0,1}},
	{{0,0},{1,0},{0,1},{0,-1}},
	{{0,0},{-1,0},{0,1},{0,-1}}
};
int n,m;

int four(int h, int w)
{
	int c=0, max=0;
	for(int i=0; i<19; i++)
	{
		c=0;
		for(int j=0; j<4; j++)
		{
			int hh = h+poly[i][j].h;
			int ww = w+poly[i][j].w;
			if(0<=hh&&hh<n && 0<=ww&&ww<m) c+=map[hh][ww];
			else
			{
				c=0;
				break;
			}
		}
		if(max<c) max=c;
	}
	return max;
}

int main(void)
{
	int max=0, c;
	scanf("%d %d", &n, &m);
	for(int i=0; i<n; i++)
		for(int j=0; j<m; j++)
			scanf("%d", &map[i][j]);
	for(int i=0; i<n; i++)
		for(int j=0; j<m; j++)
		{
			c = four(i,j);
			if(max<c) max=c;
		}
	printf("%d", max);
	
	return 0;
}